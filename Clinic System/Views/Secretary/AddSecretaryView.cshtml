@model User
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>نموذج التسجيل</title>

	<style>
		.validation-message {
			color: red;
			display: none;
		}

		.btnadd {
			--bg: #e74c3c;
			--text-color: #fff;
			position: relative;
			width: 280px;
			border: none;
			background: linear-gradient(to top, #00154c, #12376e, #23487f);
			color: var(--text-color);
			padding: 1em;
			font-weight: bold;
			text-transform: uppercase;
			transition: 0.2s;
			border-radius: 5px;
			opacity: 0.8;
			letter-spacing: 1px;
		}

			.btnadd:hover {
				opacity: 1;
			}

			.btnadd:active {
				top: 4px;
			}
	</style>
</head>
<body>
	<div class="container mt-5">
		<h2>اضافة موظف جديد</h2>
		<form id="registrationForm" asp-controller="Secretary" asp-action="AddSecretary" method="post" enctype="multipart/form-data">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="mb-3">
				<label for="fullName" class="form-label">الاسم الكامل</label>
				<input type="text" asp-for="FullName" class="form-control" id="fullName">
				<span asp-validation-for="FullName" class="text-danger"></span>
			</div>

			<div class="mb-3">
				<label for="email" asp-for="Email" class="form-label">البريد الإلكتروني</label>
				<input type="email" asp-for="Email" class="form-control" id="email">
				<span asp-validation-for="Email" class="text-danger"></span>
			</div>

			<div class="mb-3">
				<label for="password" class="form-label">كلمة المرور</label>
				<input type="password" asp-for="PasswordHash" class="form-control" id="password" required>
				<div class="validation-message" id="passwordValidation">كلمة المرور مطلوبة.</div>
			</div>

			<div id="phoneNumbers" class="mb-3">
				<label class="form-label">أرقام الهاتف</label>
				<div class="input-group mb-2">
					<input type="text" name="phones[0].PhoneNumber" class="form-control phone-input" placeholder="رقم الهاتف" required>
					<button class="btn btn-secondary add-phone" type="button">إضافة</button>
				</div>
				<div class="validation-message" id="phoneValidation">يجب أن يكون رقم الهاتف 11 رقمًا ويحتوي على أرقام فقط.</div>
			</div>

			<div style="text-align: center;">
				<button type="submit" class="btnadd">اضافة</button>
			</div>
		</form>
	</div>

	<script>
		// Function to validate phone number
		function validatePhoneNumber(phoneInput) {
			var phoneRegex = /^[0-9]{11}$/;
			var phoneValidationMessage = document.getElementById('phoneValidation');
			if (!phoneRegex.test(phoneInput.value)) {
				phoneValidationMessage.style.display = 'block';
				return false;
			} else {
				phoneValidationMessage.style.display = 'none';
				return true;
			}
		}

		// Function to validate password
		function validatePassword(passwordInput) {
			var passwordValidationMessage = document.getElementById('passwordValidation');
			if (passwordInput.value.length === 0) {
				passwordValidationMessage.style.display = 'block';
				return false;
			} else {
				passwordValidationMessage.style.display = 'none';
				return true;
			}
		}

		// Validate inputs in real-time
		document.getElementById('password').addEventListener('input', function () {
			validatePassword(this);
		});

		document.querySelectorAll('.phone-input').forEach(function (phoneInput) {
			phoneInput.addEventListener('input', function () {
				validatePhoneNumber(this);
			});
		});

		document.querySelector('.add-phone').addEventListener('click', function () {
			var phoneNumbersDiv = document.getElementById('phoneNumbers');
			var newInputGroup = document.createElement('div');
			newInputGroup.classList.add('input-group', 'mb-2');

			var phoneCount = document.querySelectorAll('.phone-input').length; // Get the current phone count

			newInputGroup.innerHTML = `
																												<input type="text" name="phones[${phoneCount}].PhoneNumber" class="form-control phone-input" placeholder="رقم الهاتف" required>
																												<button class="btn btn-danger remove-phone" type="button">إزالة</button>
																								`;

			phoneNumbersDiv.appendChild(newInputGroup);

			// Add real-time validation for the new phone input
			newInputGroup.querySelector('.phone-input').addEventListener('input', function () {
				validatePhoneNumber(this);
			});

			// Add remove functionality for the newly created input group
			newInputGroup.querySelector('.remove-phone').addEventListener('click', function () {
				this.parentElement.remove();
			});
		});

		document.getElementById('registrationForm').addEventListener('submit', function (event) {
			var isValid = true;

			// Validate phone numbers
			document.querySelectorAll('.phone-input').forEach(function (phoneInput) {
				if (!validatePhoneNumber(phoneInput)) {
					isValid = false;
				}
			});

			// Validate password
			if (!validatePassword(document.getElementById('password'))) {
				isValid = false;
			}

			if (!isValid) {
				event.preventDefault(); // Prevent form submission if validation fails
			}
		});
	</script>
</body>
</html>
@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}